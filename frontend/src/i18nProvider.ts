//Source code generated by AppGPT (www.appgpt.tech)
import { mergeTranslations } from 'ra-core';
import polyglotI18nProvider from 'ra-i18n-polyglot';
import enOriginal from 'ra-language-english';
import frOriginal from 'ra-language-french';

const enResources = {
  resources: {
    DengueInformation: {
      name: 'Dengue Information',
      fields: {
        title: 'Title',
        description: 'Description',
        imageUrl: 'Image Url',
        linkToWHO: 'Link To Who',
        id: 'id',
      },
    },
    PreventionTips: {
      name: 'Prevention Tips',
      fields: {
        tipTitle: 'Tip Title',
        description: 'Description',
        preventiveMeasures: 'Preventive Measures',
        imageUrl: 'Image Url',
        id: 'id',
      },
    },
    Symptoms: {
      name: 'Symptoms',
      fields: {
        symptomName: 'Symptom Name',
        description: 'Description',
        imageUrl: 'Image Url',
        id: 'id',
      },
    },
    TreatmentOptions: {
      name: 'Treatment Options',
      fields: {
        treatmentName: 'Treatment Name',
        description: 'Description',
        imageUrl: 'Image Url',
        id: 'id',
      },
    },
    UserStories: {
      name: 'User Stories',
      fields: {
        storyTitle: 'Story Title',
        story: 'Story',
        imageUrl: 'Image Url',
        id: 'id',
      },
    },
    Resources: {
      name: 'Resources',
      fields: {
        resourceName: 'Resource Name',
        description: 'Description',
        resourceUrl: 'Resource Url',
        id: 'id',
      },
    },
  },
};
const frResources = {
  resources: {
    DengueInformation: {
      name: 'Dengue Information (fr)',
      fields: {
        title: 'Title (fr)',
        description: 'Description (fr)',
        imageUrl: 'Image Url (fr)',
        linkToWHO: 'Link To Who (fr)',
        id: 'id',
      },
    },
    PreventionTips: {
      name: 'Prevention Tips (fr)',
      fields: {
        tipTitle: 'Tip Title (fr)',
        description: 'Description (fr)',
        preventiveMeasures: 'Preventive Measures (fr)',
        imageUrl: 'Image Url (fr)',
        id: 'id',
      },
    },
    Symptoms: {
      name: 'Symptoms (fr)',
      fields: {
        symptomName: 'Symptom Name (fr)',
        description: 'Description (fr)',
        imageUrl: 'Image Url (fr)',
        id: 'id',
      },
    },
    TreatmentOptions: {
      name: 'Treatment Options (fr)',
      fields: {
        treatmentName: 'Treatment Name (fr)',
        description: 'Description (fr)',
        imageUrl: 'Image Url (fr)',
        id: 'id',
      },
    },
    UserStories: {
      name: 'User Stories (fr)',
      fields: {
        storyTitle: 'Story Title (fr)',
        story: 'Story (fr)',
        imageUrl: 'Image Url (fr)',
        id: 'id',
      },
    },
    Resources: {
      name: 'Resources (fr)',
      fields: {
        resourceName: 'Resource Name (fr)',
        description: 'Description (fr)',
        resourceUrl: 'Resource Url (fr)',
        id: 'id',
      },
    },
  },
};

const en = mergeTranslations(enOriginal, enResources);
const fr = mergeTranslations(frOriginal, frResources);

const translations = { en, fr };
export const i18nProvider = polyglotI18nProvider(
  (locale) => translations[locale],
  'en', //default locale
  [
    { locale: 'en', name: 'English' },
    { locale: 'fr', name: 'Fran√ßais' },
  ],
);
